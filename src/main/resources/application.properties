spring.application.name=${SPRING_APP_NAME:secure-notes}


### Pattern Breakdown
# `%d{HH:mm:ss.SSS}`: Time with hours, minutes, seconds, and milliseconds (colored green)
# `%-5level`: Log level (e.g., INFO, WARN) left-padded, colored blue
# `[%thread]`: Thread name in square brackets, colored red
# `%logger{15}`: Logger name truncated to 15 characters, colored yellow
# `%msg`: The actual log message
# `%n`: New line
logging.pattern.console=${LOG_PATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}

# Spring Security default behavior:
# 1. By default, Spring Security creates a user with username "user".
# 2. A random password is generated at application startup and printed to the console.
# 3. The default login form is shown for all requests.

# Temporary configuration:
# - Override default credentials by setting static username and password.
# - This allows bypassing the random password and using fixed credentials for quick testing.
spring.security.user.name=${USERNAME}
spring.security.user.password=${PASSWORD}
